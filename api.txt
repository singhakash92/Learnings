rest api ( representaional state transfer)

they uses set of endpoints to talk to server
also they uses several http methods like get post put delete

they are stateless
any api call is not dependent on the previous one


databases : 
relational : data is stored inform of table  Perfect for highly structured data
non - relational : 



upstash : helps us to build an workflow
like sending reminders (duolingo) to leaern some stuff that is reminder workflow
like subscription renewal netlfix : that is subscription workflow


arcjet: helps in implement rate limiting, bot protection, signup form protection


middleware postion

const app = express();

// 1️⃣ Global Middleware (Runs for all requests)
app.use(express.json()); // Parses JSON bodies  makes req.body available for the below routes
app.use(express.urlencoded({ extended: true })); // Parses form data
app.use(cors()); // Enables CORS (if needed)

// 2️⃣ Custom Middleware (Authentication, Logging, etc.)   /// for authenication
app.use(myAuthMiddleware); // Custom authentication
app.use(myLoggerMiddleware); // Logging middleware

// 3️⃣ Route Handlers (APIs)
app.use("/api/v1/auth", authRouter);
app.use("/api/v1/user", userRouter);
app.use("/api/v1/sub", subRouter);

// 4️⃣ Error Handling Middleware (ALWAYS at the Bottom)   /// when error occured in above middleware this global error handler is called
app.use(errorMiddleware);

module.exports = app;


####### how to return any data
{"success": true, 
"message": "User Created Successfully", 
data: {
        token: token, 
         userId : newUser._id
    }
}
